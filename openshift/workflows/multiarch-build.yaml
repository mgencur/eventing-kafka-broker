name: Build multiarch images

on:
  pull_request_target:
    types: [ closed ]
    branches: [ 'release-v*' ]

defaults:
  run:
    shell: bash

env:
  KO_FLAGS: "--platform=all --sbom=none"

jobs:
  multiarch-build:
    name: Build multiarch test images
    # Run this only if the pull request was merged. In that case it should be safe to
    # run on pull_request_target event which has privileged access to the repository.
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    env:
      GOPATH: ${{ github.workspace }}
    steps:
      - name: Set up Golang
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x

      - name: Setup ko
        uses: imjasonh/setup-ko@v0.6
        with:
          version: v0.12.0 # ko version

      - name: Check out code
        uses: actions/checkout@v2
        with:
          path: ./src/github.com/${{ github.repository }}

      - name: Correct GOPATH
        run: |
          cd "${GOPATH}/src/github.com/${{ github.repository }}"
          module="$(head -n 1 go.mod | awk '{ print $2 }')"
          mkdir -p "${GOPATH}/src/${module}"
          mv "${GOPATH}/src/github.com/${{ github.repository }}" "${GOPATH}/src/${module}"

          echo "CANONICAL_GO_REPO=${GOPATH}/src/${module}" >> $GITHUB_ENV

      - name: Login to quay.io
        env:
          quay_user: ${{ secrets QUAY_USER }}
          quay_password: ${{ secrets.QUAY_PASSWORD }}
        run: |
          ko login -u="${quay_user}" -p="${quay_password}" quay.io

      - name: Build and push images
        run: |
          cd "${CANONICAL_GO_REPO}"
          # TODO: Parse TEST_IMAGE_TAG from current branch
          make test-images DOCKER_REPO_OVERRIDE=quay.io/${{ github.repository }}/ \
            KO_FLAGS="${{ KO_FLAGS }}" TEST_IMAGE_TAG=v1.4
